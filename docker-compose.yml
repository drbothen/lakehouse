x-superset-depends-on: &superset-depends-on
  - db
  - redis

services:
  n8n:
    container_name: n8n
    build: ./build/n8n
    restart: unless-stopped
    #command: "start --tunnel" # Optional, if you want to use the n8n hosted reverse tunnel for receiving webhooks
    ports:
      - "5678:5678"
    env_file:
      - path: .env
        required: false
      - path: ../stack.env # optional override
        required: false
    volumes:
      - ./n8n_data:/home/node/.n8n
      - ./n8n-files:/files
    networks:
      - intro-network

  selenium:
    image: selenium/standalone-chromium:130.0
    container_name: selenium
    ports:
      - "4444:4444"
    env_file:
      - path: .env
        required: false
      - path: ../stack.env # optional override
        required: false
    networks:
      - intro-network


  nessie:
    image: projectnessie/nessie:0.76.6
    container_name: nessie
    restart: unless-stopped
    depends_on:
      - mongo
    env_file:
      - path: .env
        required: false
      - path: ../stack.env # optional override
        required: false
    volumes:
      - ./nessie-data:/nessie/data
    ports:
      - "19120:19120"
    networks:
      - intro-network

  mongo:
    image: mongo
    ports:
      - "27017:27017"
    container_name: mongo
    restart: unless-stopped
    env_file:
      - path: .env
        required: false
      - path: ../stack.env # optional override
        required: false
    volumes:
      - ./mongo-data:/data/db
    networks:
      - intro-network

  minio:
    image: minio/minio:RELEASE.2024-10-02T17-50-41Z
    container_name: minio
    restart: unless-stopped
    env_file:
      - path: .env
        required: false
      - path: ../stack.env # optional override
        required: false
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./minio-data:/minio-data
    entrypoint: >
      /bin/sh -c "
      minio server /data --console-address ':9001' &
      sleep 5;
      mc alias set myminio http://localhost:9000 admin password;
      mc mb myminio/datalake;
      mc mb myminio/warehouse;
      tail -f /dev/null"
    networks:
      - intro-network

  spark:
    image: alexmerced/spark35nb:spark3_5_2
    ports:
      - 8080:8080
      - 7077:7077
      - 8081:8081
      - 4040-4045:4040-4045
      - 18080:18080
      - 8888:8888
    env_file:
      - path: .env
        required: false
      - path: ../stack.env # optional override
        required: false
    volumes:
      - ./spark-events:/tmp/spark-events
    container_name: spark
    restart: unless-stopped
    entrypoint: >
      /bin/bash -c "
      /opt/spark/sbin/start-master.sh && \
      /opt/spark/sbin/start-worker.sh spark://localhost:7077 && \
      mkdir -p /tmp/spark-events && \
      start-history-server.sh && \
      jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password='' && \
      tail -f /dev/null"
    networks:
      - intro-network

  dremio:
    image: dremio/dremio-oss:25.1
    ports:
      - 9047:9047
      - 31010:31010
    container_name: dremio
    restart: unless-stopped
    env_file:
      - path: .env
        required: false
      - path: ../stack.env # optional override
        required: false
    volumes:
      - ./dremio-data:/opt/dremio/data
    networks:
      - intro-network

  redis:
    image: redis:7
    container_name: superset_cache
    restart: unless-stopped
    volumes:
      - ./redis-data:/data
    networks:
      - intro-network

  db:
    image: postgres:15
    env_file:
      - path: build/.env # default
        required: true
      - path: build/.env-local # optional override
        required: false
      - path: ../stack.env # optional override
        required: false
    container_name: db
    restart: unless-stopped
    volumes:
      - ./db_home:/var/lib/postgresql/data
      - ./build/superset/docker/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - intro-network

  superset:
    env_file:
      - path: ./build/.env # default
        required: true
      - path: ./build/.env-local # optional override
        required: false
      - path: ../stack.env # optional override
        required: false
    build:
      context: ./build/superset
    container_name: superset_app
    restart: unless-stopped
    depends_on: *superset-depends-on
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    ports:
      - 8088:8088
    volumes:
      - ./build/superset/docker:/app/docker
      - ./superset_home:/app/superset_home
    networks:
      - intro-network

  superset-init:
    env_file:
      - path: ./build/.env # default
        required: true
      - path: ./build/.env-local # optional override
        required: false
      - path: ../stack.env # optional override
        required: false
    depends_on: *superset-depends-on
    build:
      context: ./build/superset
    container_name: superset_init
    command: ["/app/docker/docker-init.sh"]
    volumes:
      - ./build/superset/docker:/app/docker
      - ./superset_home:/app/superset_home
    healthcheck:
      disable: true
    networks:
      - intro-network

  superset-worker:
    env_file:
      - path: ./build/.env # default
        required: true
      - path: ./build/.env-local # optional override
        required: false
      - path: ../stack.env # optional override
        required: false
    depends_on: *superset-depends-on
    build:
      context: ./build/superset
    container_name: superset_worker
    restart: unless-stopped
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    user: "root"
    volumes:
      - ./build/superset/docker:/app/docker
      - ./superset_home:/app/superset_home
    networks:
      - intro-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "celery -A superset.tasks.celery_app:app inspect ping -d celery@$$HOSTNAME",
        ]

  superset-worker-beat:
    env_file:
      - path: ./build/.env # default
        required: true
      - path: ./build/.env-local # optional override
        required: false
      - path: ../stack.env # optional override
        required: false
    depends_on: *superset-depends-on
    build:
      context: ./build/superset
    container_name: superset_worker_beat
    restart: unless-stopped
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    user: "root"
    volumes:
      - ./build/superset/docker:/app/docker
      - ./superset_home:/app/superset_home
    networks:
      - intro-network
    healthcheck:
      disable: true

  # Potentially Remove
  adminer:
    image: adminer
    restart: always
    ports:
      - 8082:8080

  pgadmin:
    image: dpage/pgadmin4:8.12.0
    container_name: pgadmin
    ports:
      - "8083:80"  # Expose port 80 on the host machine to access pgAdmin4
    env_file:
      - .env
    restart: unless-stopped  # Automatically restart the container unless stopped manually
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin  # Add volume for persistence
    networks:
      - intro-network  # Use the existing network if needed

networks:
  intro-network: